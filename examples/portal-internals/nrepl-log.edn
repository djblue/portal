^#:portal.viewer{:default :portal.viewer/inspector} (^{:portal.nrepl/eval true, :portal.viewer/for {:code :portal.viewer/code, :time :portal.viewer/relative-time, :ms :portal.viewer/duration-ms}, :portal.viewer/code {:language :clojure}} {:ns user, :time #inst "2023-10-24T16:15:37.012-00:00", :file "/home/chris/repos/portal/dev/user.clj", :column 3, :level :info, :line 49, :result 6, :runtime :clj, :code "(+ 1 2 3)", :ms 0} ^{:portal.nrepl/eval true, :portal.viewer/for {:code :portal.viewer/code, :time :portal.viewer/relative-time, :ms :portal.viewer/duration-ms}, :portal.viewer/code {:language :clojure}} {:ns user, :time #inst "2023-10-24T16:15:36.269-00:00", :file "/home/chris/repos/portal/dev/user.clj", :column 3, :level :info, :line 48, :result "foo", :runtime :clj, :code "(name :foo)", :ms 1} ^{:portal.nrepl/eval true, :portal.viewer/for {:code :portal.viewer/code, :time :portal.viewer/relative-time, :ms :portal.viewer/duration-ms}, :portal.viewer/code {:language :clojure}} {:ns user, :time #inst "2023-10-24T16:15:35.518-00:00", :file "/home/chris/repos/portal/dev/user.clj", :column 3, :level :info, :line 47, :result (0 1 2 3 4 5 6 7 8 9), :runtime :clj, :code "(range 10)", :ms 1} ^{:portal.nrepl/eval true, :portal.viewer/for {:code :portal.viewer/code, :time :portal.viewer/relative-time, :ms :portal.viewer/duration-ms}, :portal.viewer/code {:language :clojure}} {:ns user, :time #inst "2023-10-24T16:15:34.712-00:00", :file "/home/chris/repos/portal/dev/user.clj", :column 3, :level :info, :line 46, :result nil, :runtime :clj, :stdio [{:tag :out, :val "hello\n"}], :code "(println \"hello\")", :ms 0} ^{:portal.nrepl/eval true, :portal.viewer/for {:code :portal.viewer/code, :time :portal.viewer/relative-time, :ms :portal.viewer/duration-ms}, :portal.viewer/code {:language :clojure}} {:report [{:type :begin-test-ns, :ns #namespace[portal.runtime.cson-test]} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55488], :line 105, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name sorted-collections, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/sorted-collections} {:type :pass, :expected ^{:line 108, :column 9} (= a b), :actual (= {:a 1, :b 2, :c 3} {:a 1, :b 2, :c 3}), :message nil} {:type :pass, :expected ^{:line 109, :column 9} (= ^{:line 109, :column 12} (keys a) ^{:line 109, :column 21} (keys b)), :actual (= (:a :b :c) (:a :b :c)), :message nil} {:type :pass, :expected ^{:line 110, :column 9} (= ^{:line 110, :column 12} (type a) ^{:line 110, :column 21} (type b)), :actual (= clojure.lang.PersistentTreeMap clojure.lang.PersistentTreeMap), :message nil} {:type :pass, :expected ^{:line 113, :column 9} (= a b), :actual (= {3 "c", 2 "b", 1 "a"} {3 "c", 2 "b", 1 "a"}), :message nil} {:type :pass, :expected ^{:line 114, :column 9} (= ^{:line 114, :column 12} (keys a) ^{:line 114, :column 21} (keys b)), :actual (= (3 2 1) (3 2 1)), :message nil} {:type :pass, :expected ^{:line 115, :column 9} (= ^{:line 115, :column 12} (type a) ^{:line 115, :column 21} (type b)), :actual (= clojure.lang.PersistentTreeMap clojure.lang.PersistentTreeMap), :message nil} {:type :pass, :expected ^{:line 118, :column 9} (= a b), :actual (= #{1 2 3} #{1 2 3}), :message nil} {:type :pass, :expected ^{:line 119, :column 9} (= ^{:line 119, :column 12} (seq a) ^{:line 119, :column 20} (seq b)), :actual (= (1 2 3) (1 2 3)), :message nil} {:type :pass, :expected ^{:line 122, :column 9} (= a b), :actual (= #{3 2 1} #{3 2 1}), :message nil} {:type :pass, :expected ^{:line 123, :column 9} (= ^{:line 123, :column 12} (seq a) ^{:line 123, :column 20} (seq b)), :actual (= (3 2 1) (3 2 1)), :message nil} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55488], :line 105, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name sorted-collections, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/sorted-collections} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55566], :line 151, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name metadata, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/metadata} {:type :pass, :expected ^{:line 155, :column 11} (= m ^{:line 155, :column 16} (meta ^{:line 155, :column 22} (pass value))), :actual (= {:my :meta} {:my :meta}), :message nil} {:type :pass, :expected ^{:line 155, :column 11} (= m ^{:line 155, :column 16} (meta ^{:line 155, :column 22} (pass value))), :actual (= {:my :meta} {:my :meta}), :message nil} {:type :pass, :expected ^{:line 155, :column 11} (= m ^{:line 155, :column 16} (meta ^{:line 155, :column 22} (pass value))), :actual (= {:my :meta} {:my :meta}), :message nil} {:type :pass, :expected ^{:line 155, :column 11} (= m ^{:line 155, :column 16} (meta ^{:line 155, :column 22} (pass value))), :actual (= {:my :meta} {:my :meta}), :message nil} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55566], :line 151, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name metadata, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/metadata} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55458], :line 87, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name range-with-meta, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/range-with-meta} {:type :pass, :expected ^{:line 89, :column 18} (= (quote ()) ^{:line 89, :column 25} (pass v)), :actual (= () ()), :message "Range with meta doesn't work in clj"} {:type :pass, :expected ^{:line 93, :column 9} (= v ^{:line 93, :column 14} (pass v)), :actual (= (0 1.0 2.0 3.0 4.0) (0 1.0 2.0 3.0 4.0)), :message "Range with no meta works correctly"} {:type :pass, :expected ^{:line 95, :column 9} (= v ^{:line 95, :column 14} (pass v)), :actual (= ^{:my :meta} (0 1 2 3 4) ^{:my :meta} (0 1 2 3 4)), :message "LongRange with no meta works correctly"} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55458], :line 87, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name range-with-meta, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/range-with-meta} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55639], :line 193, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name binary, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/binary} {:type :pass, :expected ^{:line 197, :column 9} (= "[\"bin\",\"aGk=\"]" ^{:line 197, :column 33} (cson/write bin)), :actual (= "[\"bin\",\"aGk=\"]" "[\"bin\",\"aGk=\"]"), :message nil} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55639], :line 193, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name binary, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/binary} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55374], :line 34, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name escape-strings, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/escape-strings} {:type :pass, :expected (= "\n" (pass "\n")), :actual (= "\n" "\n"), :message nil} {:type :pass, :expected (= "\"" (pass "\"")), :actual (= "\"" "\""), :message nil} {:type :pass, :expected (= " \"hello\" " (pass " \"hello\" ")), :actual (= " \"hello\" " " \"hello\" "), :message nil} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55374], :line 34, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name escape-strings, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/escape-strings} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55387], :line 41, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name basic-collections, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/basic-collections} {:type :pass, :expected (= [] (pass [])), :actual (= [] []), :message nil} {:type :pass, :expected (= [1 2 3] (pass [1 2 3])), :actual (= [1 2 3] [1 2 3]), :message nil} {:type :pass, :expected (= {} (pass {})), :actual (= {} {}), :message nil} {:type :pass, :expected (= {:a :b} (pass {:a :b})), :actual (= {:a :b} {:a :b}), :message nil} {:type :pass, :expected (= #{} (pass #{})), :actual (= #{} #{}), :message nil} {:type :pass, :expected (= #{1 3 2} (pass #{1 3 2})), :actual (= #{1 3 2} #{1 3 2}), :message nil} {:type :pass, :expected (= (quote ()) (pass (quote ()))), :actual (= () ()), :message nil} {:type :pass, :expected (= ^{:line 51, :column 5} (list 1 2 3) (pass ^{:line 51, :column 5} (list 1 2 3))), :actual (= (1 2 3) (1 2 3)), :message nil} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55387], :line 41, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name basic-collections, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/basic-collections} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55529], :line 134, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name tagged-objects, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/tagged-objects} {:type :pass, :expected ^{:line 136, :column 9} (= ^{:line 136, :column 12} (pass value) ^{:line 136, :column 25} (pass value)), :actual (= #inst "2023-10-24T16:10:39.059-00:00" #inst "2023-10-24T16:10:39.059-00:00"), :message nil} {:type :pass, :expected ^{:line 136, :column 9} (= ^{:line 136, :column 12} (pass value) ^{:line 136, :column 25} (pass value)), :actual (= #uuid "18e6a60d-4380-4e8a-a4d9-09d0558501bb" #uuid "18e6a60d-4380-4e8a-a4d9-09d0558501bb"), :message nil} {:type :pass, :expected ^{:line 136, :column 9} (= ^{:line 136, :column 12} (pass value) ^{:line 136, :column 25} (pass value)), :actual (= #tag :value #tag :value), :message nil} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55529], :line 134, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name tagged-objects, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/tagged-objects} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55613], :line 179, :column 4, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name java-chars, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/java-chars} {:type :pass, :expected ^{:line 180, :column 10} (= \A ^{:line 180, :column 16} (pass \A)), :actual (= \A \A), :message nil} {:type :pass, :expected ^{:line 181, :column 10} (= ^{:line 181, :column 13} (seq "hi") ^{:line 181, :column 24} (pass ^{:line 181, :column 30} (seq "hi"))), :actual (= (\h \i) (\h \i)), :message nil} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55613], :line 179, :column 4, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name java-chars, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/java-chars} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55471], :line 97, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name seq-collections, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/seq-collections} {:type :pass, :expected (= (seq (quote ^{:line 100, :column 6} (0))) (pass (seq (quote ^{:line 100, :column 6} (0))))), :actual (= ^{:line 100, :column 6} (0) ^{:line 100, :column 6} (0)), :message nil} {:type :pass, :expected (= (seq [0]) (pass (seq [0]))), :actual (= (0) (0)), :message nil} {:type :pass, :expected (= (seq #{0}) (pass (seq #{0}))), :actual (= (0) (0)), :message nil} {:type :pass, :expected (= (seq {0 0}) (pass (seq {0 0}))), :actual (= ([0 0]) ([0 0])), :message nil} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55471], :line 97, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name seq-collections, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/seq-collections} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55547], :line 141, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name tagged-values, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/tagged-values} {:type :pass, :expected (= v1 (pass v1)), :actual (= #my/tag {:hello :world} #my/tag {:hello :world}), :message nil} {:type :pass, :expected (= v2 (pass v2)), :actual (= #my/tag {:hello :world} #my/tag {:hello :world}), :message nil} {:type :pass, :expected (= (meta* v1) (meta* (pass v1))), :actual (= nil nil), :message nil} {:type :pass, :expected (= (meta* v2) (meta* (pass v2))), :actual (= {:my :meta} {:my :meta}), :message nil} {:type :pass, :expected ^{:line 146, :column 7} (thrown? AssertionError ^{:line 148, :column 8} (cson/tagged-value :my/tag {:hello :world})), :actual #error {
 :cause "Assert failed: (string? tag)"
 :via
 [{:type java.lang.AssertionError
   :message "Assert failed: (string? tag)"
   :at [portal.runtime.cson$tagged_value invokeStatic "cson.cljc" 212]}]
 :trace
 [[portal.runtime.cson$tagged_value invokeStatic "cson.cljc" 212]
  [portal.runtime.cson$tagged_value invoke "cson.cljc" 212]
  [portal.runtime.cson_test$fn__55547 invokeStatic "cson_test.cljc" 148]
  [portal.runtime.cson_test$fn__55547 invoke "cson_test.cljc" 141]
  [clojure.test$test_var$fn__9856 invoke "test.clj" 717]
  [clojure.test$test_var invokeStatic "test.clj" 717]
  [clojure.test$test_var invoke "test.clj" 708]
  [clojure.test$test_vars$fn__9882$fn__9887 invoke "test.clj" 735]
  [clojure.test$default_fixture invokeStatic "test.clj" 687]
  [clojure.test$default_fixture invoke "test.clj" 683]
  [clojure.test$test_vars$fn__9882 invoke "test.clj" 735]
  [clojure.test$default_fixture invokeStatic "test.clj" 687]
  [clojure.test$default_fixture invoke "test.clj" 683]
  [clojure.test$test_vars invokeStatic "test.clj" 731]
  [clojure.test$test_all_vars invokeStatic "test.clj" 737]
  [clojure.test$test_ns invokeStatic "test.clj" 758]
  [clojure.test$test_ns invoke "test.clj" 743]
  [clojure.lang.Var invoke "Var.java" 384]
  [user$eval55966 invokeStatic "NO_SOURCE_FILE" 45]
  [user$eval55966 invoke "NO_SOURCE_FILE" 45]
  [clojure.lang.Compiler eval "Compiler.java" 7194]
  [clojure.lang.Compiler eval "Compiler.java" 7149]
  [clojure.core$eval invokeStatic "core.clj" 3215]
  [clojure.core$eval invoke "core.clj" 3211]
  [nrepl.middleware.interruptible_eval$evaluate$fn__32458$fn__32459 invoke "interruptible_eval.clj" 87]
  [clojure.lang.AFn applyToHelper "AFn.java" 152]
  [clojure.lang.AFn applyTo "AFn.java" 144]
  [clojure.core$apply invokeStatic "core.clj" 667]
  [clojure.core$with_bindings_STAR_ invokeStatic "core.clj" 1990]
  [clojure.core$with_bindings_STAR_ doInvoke "core.clj" 1990]
  [clojure.lang.RestFn invoke "RestFn.java" 425]
  [nrepl.middleware.interruptible_eval$evaluate$fn__32458 invoke "interruptible_eval.clj" 87]
  [clojure.main$repl$read_eval_print__9206$fn__9209 invoke "main.clj" 437]
  [clojure.main$repl$read_eval_print__9206 invoke "main.clj" 437]
  [clojure.main$repl$fn__9215 invoke "main.clj" 458]
  [clojure.main$repl invokeStatic "main.clj" 458]
  [clojure.main$repl doInvoke "main.clj" 368]
  [clojure.lang.RestFn invoke "RestFn.java" 1523]
  [nrepl.middleware.interruptible_eval$evaluate invokeStatic "interruptible_eval.clj" 84]
  [nrepl.middleware.interruptible_eval$evaluate invoke "interruptible_eval.clj" 56]
  [nrepl.middleware.interruptible_eval$interruptible_eval$fn__32491$fn__32495 invoke "interruptible_eval.clj" 152]
  [clojure.lang.AFn run "AFn.java" 22]
  [nrepl.middleware.session$session_exec$main_loop__32751$fn__32755 invoke "session.clj" 218]
  [nrepl.middleware.session$session_exec$main_loop__32751 invoke "session.clj" 217]
  [clojure.lang.AFn run "AFn.java" 22]
  [java.lang.Thread run "Thread.java" 833]]}, :message "only allow string tags"} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55547], :line 141, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name tagged-values, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/tagged-values} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55622], :line 188, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name special-numbers, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/special-numbers} {:type :pass, :expected ^{:line 191, :column 9} (= cson ^{:line 191, :column 17} (cson/write ^{:line 191, :column 29} (cson/read cson))), :actual (= "[\"nan\"]" "[\"nan\"]"), :message ##NaN} {:type :pass, :expected ^{:line 191, :column 9} (= cson ^{:line 191, :column 17} (cson/write ^{:line 191, :column 29} (cson/read cson))), :actual (= "[\"inf\"]" "[\"inf\"]"), :message ##Inf} {:type :pass, :expected ^{:line 191, :column 9} (= cson ^{:line 191, :column 17} (cson/write ^{:line 191, :column 29} (cson/read cson))), :actual (= "[\"-inf\"]" "[\"-inf\"]"), :message ##-Inf} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55622], :line 188, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name special-numbers, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/special-numbers} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55592], :line 164, :column 4, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name java-longs, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/java-longs} {:type :pass, :expected ^{:line 165, :column 10} (= 1 ^{:line 165, :column 15} (byte 1) ^{:line 165, :column 25} (pass ^{:line 165, :column 31} (byte 1))), :actual (= 1 1 1), :message nil} {:type :pass, :expected ^{:line 166, :column 10} (= 1 ^{:line 166, :column 15} (short 1) ^{:line 166, :column 25} (pass ^{:line 166, :column 31} (short 1))), :actual (= 1 1 1), :message nil} {:type :pass, :expected ^{:line 167, :column 10} (= 1 ^{:line 167, :column 15} (int 1) ^{:line 167, :column 25} (pass ^{:line 167, :column 31} (int 1))), :actual (= 1 1 1), :message nil} {:type :pass, :expected ^{:line 168, :column 10} (= 1 ^{:line 168, :column 15} (long 1) ^{:line 168, :column 25} (pass ^{:line 168, :column 31} (long 1))), :actual (= 1 1 1), :message nil} {:type :pass, :expected ^{:line 169, :column 10} (= 4611681620380904123 ^{:line 169, :column 33} (pass 4611681620380904123)), :actual (= 4611681620380904123 4611681620380904123), :message nil} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55592], :line 164, :column 4, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name java-longs, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/java-longs} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55313], :line 12, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name simple-values, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/simple-values} {:type :pass, :expected (= nil (pass nil)), :actual (= nil nil), :message nil} {:type :pass, :expected (= 0 (pass 0)), :actual (= 0 0), :message nil} {:type :pass, :expected (= 1.0 (pass 1.0)), :actual (= 1.0 1.0), :message nil} {:type :pass, :expected (= 1.5 (pass 1.5)), :actual (= 1.5 1.5), :message nil} {:type :pass, :expected (= 42N (pass 42N)), :actual (= 42N 42N), :message nil} {:type :pass, :expected (= \newline (pass \newline)), :actual (= \newline \newline), :message nil} {:type :pass, :expected (= true (pass true)), :actual (= true true), :message nil} {:type :pass, :expected (= false (pass false)), :actual (= false false), :message nil} {:type :pass, :expected (= (quote hello) (pass (quote hello))), :actual (= hello hello), :message nil} {:type :pass, :expected (= (quote hello/world) (pass (quote hello/world))), :actual (= hello/world hello/world), :message nil} {:type :pass, :expected (= :hello (pass :hello)), :actual (= :hello :hello), :message nil} {:type :pass, :expected (= :hello/world (pass :hello/world)), :actual (= :hello/world :hello/world), :message nil} {:type :pass, :expected (= "" (pass "")), :actual (= "" ""), :message nil} {:type :pass, :expected (= "hello" (pass "hello")), :actual (= "hello" "hello"), :message nil} {:type :pass, :expected (= "hello/world" (pass "hello/world")), :actual (= "hello/world" "hello/world"), :message nil} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55313], :line 12, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name simple-values, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/simple-values} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55420], :line 70, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name composite-collections, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/composite-collections} {:type :pass, :expected (= [[[]]] (pass [[[]]])), :actual (= [[[]]] [[[]]]), :message nil} {:type :pass, :expected (= #{#{#{}}} (pass #{#{#{}}})), :actual (= #{#{#{}}} #{#{#{}}}), :message nil} {:type :pass, :expected (= {{} {}} (pass {{} {}})), :actual (= {{} {}} {{} {}}), :message nil} {:type :pass, :expected (= {[] []} (pass {[] []})), :actual (= {[] []} {[] []}), :message nil} {:type :pass, :expected (= {#{} #{}} (pass {#{} #{}})), :actual (= {#{} #{}} {#{} #{}}), :message nil} {:type :pass, :expected (= {^{:line 78, :column 6} (list) ^{:line 78, :column 13} (list)} (pass {^{:line 78, :column 6} (list) ^{:line 78, :column 13} (list)})), :actual (= {() ()} {() ()}), :message nil} {:type :pass, :expected (= ^{:line 79, :column 5} (list [] #{} {}) (pass ^{:line 79, :column 5} (list [] #{} {}))), :actual (= ([] #{} {}) ([] #{} {})), :message nil} {:type :pass, :expected (= composite-value (pass composite-value)), :actual (= [hello hello/world ^{:line 56, :column 5} (1 2 3) "" 3.14 true false #inst "2021-04-07T22:43:59.393-00:00" #uuid "1d80bdbb-ab16-47b2-a8bd-068f94950248" nil 1 \h "data" #:hello{:world :grep} #{1 3 2}] [hello hello/world ^{:line 56, :column 5} (1 2 3) "" 3.14 true false #inst "2021-04-07T22:43:59.393-00:00" #uuid "1d80bdbb-ab16-47b2-a8bd-068f94950248" nil 1 \h "data" #:hello{:world :grep} #{1 3 2}]), :message nil} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55420], :line 70, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name composite-collections, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/composite-collections} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55583], :line 157, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name symbol-key-with-meta, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/symbol-key-with-meta} {:type :pass, :expected ^{:line 160, :column 9} (= value ^{:line 160, :column 18} (pass value)), :actual (= {^{:a :b} k v} {^{:a :b} k v}), :message nil} {:type :pass, :expected ^{:line 161, :column 9} (= m ^{:line 161, :column 14} (meta ^{:line 161, :column 20} (first ^{:line 161, :column 27} (keys ^{:line 161, :column 33} (pass value))))), :actual (= {:a :b} {:a :b}), :message nil} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55583], :line 157, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name symbol-key-with-meta, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/symbol-key-with-meta} {:type :begin-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55453], :line 82, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name special-collections, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/special-collections} {:type :pass, :expected (= ^{:line 85, :column 5} (range 10) (pass ^{:line 85, :column 5} (range 10))), :actual (= (0 1 2 3 4 5 6 7 8 9) (0 1 2 3 4 5 6 7 8 9)), :message nil} {:type :end-test-var, :var ^{:test #function[portal.runtime.cson-test/fn--55453], :line 82, :column 1, :file "/home/chris/repos/portal/test/portal/runtime/cson_test.cljc", :name special-collections, :ns #namespace[portal.runtime.cson-test]} #'portal.runtime.cson-test/special-collections} {:type :end-test-ns, :ns #namespace[portal.runtime.cson-test]}], :ns user, :time #inst "2023-10-24T16:15:33.884-00:00", :file "/home/chris/repos/portal/dev/user.clj", :column 3, :level :info, :line 45, :result {:test 16, :pass 77, :fail 0, :error 0}, :runtime :clj, :stdio [{:tag :out, :val "\nTesting portal.runtime.cson-test\n"}], :code "((requiring-resolve 'clojure.test/test-ns) 'portal.runtime.cson-test)", :ms 3} ^{:portal.nrepl/eval true, :portal.viewer/for {:code :portal.viewer/code, :time :portal.viewer/relative-time, :ms :portal.viewer/duration-ms}, :portal.viewer/code {:language :clojure}} {:ns user, :time #inst "2023-10-24T16:15:32.115-00:00", :file "/home/chris/repos/portal/dev/user.clj", :column 3, :level :error, :line 44, :result ^#:clojure.datafy{:obj #error {
 :cause "Divide by zero"
 :via
 [{:type java.lang.ArithmeticException
   :message "Divide by zero"
   :at [clojure.lang.Numbers divide "Numbers.java" 190]}]
 :trace
 [[clojure.lang.Numbers divide "Numbers.java" 190]
  [clojure.lang.Numbers divide "Numbers.java" 3911]
  [user$eval55963 invokeStatic "NO_SOURCE_FILE" 44]
  [user$eval55963 invoke "NO_SOURCE_FILE" 44]
  [clojure.lang.Compiler eval "Compiler.java" 7194]
  [clojure.lang.Compiler eval "Compiler.java" 7149]
  [clojure.core$eval invokeStatic "core.clj" 3215]
  [clojure.core$eval invoke "core.clj" 3211]
  [nrepl.middleware.interruptible_eval$evaluate$fn__32458$fn__32459 invoke "interruptible_eval.clj" 87]
  [clojure.lang.AFn applyToHelper "AFn.java" 152]
  [clojure.lang.AFn applyTo "AFn.java" 144]
  [clojure.core$apply invokeStatic "core.clj" 667]
  [clojure.core$with_bindings_STAR_ invokeStatic "core.clj" 1990]
  [clojure.core$with_bindings_STAR_ doInvoke "core.clj" 1990]
  [clojure.lang.RestFn invoke "RestFn.java" 425]
  [nrepl.middleware.interruptible_eval$evaluate$fn__32458 invoke "interruptible_eval.clj" 87]
  [clojure.main$repl$read_eval_print__9206$fn__9209 invoke "main.clj" 437]
  [clojure.main$repl$read_eval_print__9206 invoke "main.clj" 437]
  [clojure.main$repl$fn__9215 invoke "main.clj" 458]
  [clojure.main$repl invokeStatic "main.clj" 458]
  [clojure.main$repl doInvoke "main.clj" 368]
  [clojure.lang.RestFn invoke "RestFn.java" 1523]
  [nrepl.middleware.interruptible_eval$evaluate invokeStatic "interruptible_eval.clj" 84]
  [nrepl.middleware.interruptible_eval$evaluate invoke "interruptible_eval.clj" 56]
  [nrepl.middleware.interruptible_eval$interruptible_eval$fn__32491$fn__32495 invoke "interruptible_eval.clj" 152]
  [clojure.lang.AFn run "AFn.java" 22]
  [nrepl.middleware.session$session_exec$main_loop__32751$fn__32755 invoke "session.clj" 218]
  [nrepl.middleware.session$session_exec$main_loop__32751 invoke "session.clj" 217]
  [clojure.lang.AFn run "AFn.java" 22]
  [java.lang.Thread run "Thread.java" 833]]}, :class java.lang.ArithmeticException} {:via [{:type java.lang.ArithmeticException, :message "Divide by zero", :at [clojure.lang.Numbers divide "Numbers.java" 190]}], :trace [[clojure.lang.Numbers divide "Numbers.java" 190] [clojure.lang.Numbers divide "Numbers.java" 3911] [user$eval55963 invokeStatic "NO_SOURCE_FILE" 44] [user$eval55963 invoke "NO_SOURCE_FILE" 44] [clojure.lang.Compiler eval "Compiler.java" 7194] [clojure.lang.Compiler eval "Compiler.java" 7149] [clojure.core$eval invokeStatic "core.clj" 3215] [clojure.core$eval invoke "core.clj" 3211] [nrepl.middleware.interruptible_eval$evaluate$fn__32458$fn__32459 invoke "interruptible_eval.clj" 87] [clojure.lang.AFn applyToHelper "AFn.java" 152] [clojure.lang.AFn applyTo "AFn.java" 144] [clojure.core$apply invokeStatic "core.clj" 667] [clojure.core$with_bindings_STAR_ invokeStatic "core.clj" 1990] [clojure.core$with_bindings_STAR_ doInvoke "core.clj" 1990] [clojure.lang.RestFn invoke "RestFn.java" 425] [nrepl.middleware.interruptible_eval$evaluate$fn__32458 invoke "interruptible_eval.clj" 87] [clojure.main$repl$read_eval_print__9206$fn__9209 invoke "main.clj" 437] [clojure.main$repl$read_eval_print__9206 invoke "main.clj" 437] [clojure.main$repl$fn__9215 invoke "main.clj" 458] [clojure.main$repl invokeStatic "main.clj" 458] [clojure.main$repl doInvoke "main.clj" 368] [clojure.lang.RestFn invoke "RestFn.java" 1523] [nrepl.middleware.interruptible_eval$evaluate invokeStatic "interruptible_eval.clj" 84] [nrepl.middleware.interruptible_eval$evaluate invoke "interruptible_eval.clj" 56] [nrepl.middleware.interruptible_eval$interruptible_eval$fn__32491$fn__32495 invoke "interruptible_eval.clj" 152] [clojure.lang.AFn run "AFn.java" 22] [nrepl.middleware.session$session_exec$main_loop__32751$fn__32755 invoke "session.clj" 218] [nrepl.middleware.session$session_exec$main_loop__32751 invoke "session.clj" 217] [clojure.lang.AFn run "AFn.java" 22] [java.lang.Thread run "Thread.java" 833]], :cause "Divide by zero"}, :runtime :clj, :stdio [{:tag :err, :val "Execution error (ArithmeticException) at user/eval55963 (REPL:44).\nDivide by zero\n"}], :code "(/ 1 0)", :ms 1})