name: Clojure CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/setup
    - run: bb -m tasks.ci/setup
  check:
    needs: [ setup ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/setup
    - uses: ./.github/setup-gradle
    - run: bb check
  build:
    needs: [ setup ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/setup
    - run: bb -m tasks.build/build
    - uses: actions/upload-artifact@v4
      with:
        name: portal-client
        path: resources/portal
  test-ui:
    needs: [ setup ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/setup
    - run: bb -m tasks.test/cljs-ui
  test-clj:
    needs: [ setup, build ]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: 135
    - uses: actions/checkout@v3
    - uses: ./.github/setup
    - run: rm package.json
    - run: npm install "react@^17.0.2"
    - uses: actions/download-artifact@v4
      with:
        name: portal-client
        path: resources/portal
    - run: bb -m tasks.test/clj
  test-cljs:
    needs: [ setup, build ]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: 135
    - uses: actions/checkout@v3
    - uses: ./.github/setup
    - run: rm package.json
    - run: npm install "react@^17.0.2"
    - uses: actions/download-artifact@v4
      with:
        name: portal-client
        path: resources/portal
    - run: bb -m tasks.test/cljs
  test-cljr:
    needs: [ setup, build ]
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: browser-actions/setup-chrome@v1
      with:
        chrome-version: 135
    - uses: actions/checkout@v3
    - uses: ./.github/setup
    - run: rm package.json
    - run: npm install "react@^17.0.2"
    - uses: actions/download-artifact@v4
      with:
        name: portal-client
        path: resources/portal
    - uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.x'
    - run: dotnet tool install --global Clojure.Main --version 1.11.0
    - run: dotnet restore
    - run: bb -m tasks.test/cljr
  app:
    runs-on: ubuntu-latest
    needs: [ test-ui, test-clj, test-cljs, test-cljr, check ]
    if: github.event_name == 'push'
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/setup
    - run: bb app
    - uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./target/pwa-release/
        force_orphan: true
  package:
    runs-on: ubuntu-latest
    needs: [ test-ui, test-clj, test-cljs, test-cljr, check ]
    if: startsWith(github.event.head_commit.message, 'Release ')
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/setup
    - uses: ./.github/setup-gradle
    - run: bb pkg
    - uses: actions/upload-artifact@v4
      with:
        name: jar
        path: target/*.jar
    - uses: actions/upload-artifact@v4
      with:
        name: extension-vscode
        path: |
          extension-vscode/
          !extension-vscode/node_modules
    - uses: actions/upload-artifact@v4
      with:
        name: extension-intellij
        path: extension-intellij/build/distributions/*.zip
  release:
    runs-on: ubuntu-latest
    needs: [ package ]
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/setup
    - id: info
      run: bb -m tasks.info
    - uses: actions/download-artifact@v4
      with:
        name: jar
        path: target/
    - uses: actions/download-artifact@v4
      with:
        name: extension-vscode
        path: extension-vscode/
    - uses: actions/download-artifact@v4
      with:
        name: extension-intellij
        path: extension-intellij/build/distributions/
    - uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.info.outputs.version }}
        files: |
          target/*.jar
          extension-vscode/*.vsix
          extension-intellij/build/distributions/*.zip
  deploy-clojars:
    runs-on: ubuntu-latest
    needs: [ release ]
    environment: deploy
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/setup
    - uses: actions/download-artifact@v4
      with:
        name: jar
        path: target/
    - run: ls target/
    - run: bb -m tasks.deploy/deploy-clojars
      env:
        CLOJARS_PASSWORD: ${{ secrets.CLOJARS_PASSWORD }}
        CLOJARS_USERNAME: ${{ secrets.CLOJARS_USERNAME }}
  deploy-vsx:
    runs-on: ubuntu-latest
    needs: [ release ]
    environment: deploy
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/setup
    - uses: actions/download-artifact@v4
      with:
        name: extension-vscode
        path: extension-vscode/
    - run: ls extension-vscode/
    - run: bb -m tasks.deploy/deploy-vscode
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
  deploy-open-vsx:
    runs-on: ubuntu-latest
    needs: [ release ]
    environment: deploy
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/setup
    - uses: actions/download-artifact@v4
      with:
        name: extension-vscode
        path: extension-vscode/
    - run: ls extension-vscode/
    - run: bb -m tasks.deploy/deploy-open-vsx
      env:
        OVSX_PAT: ${{ secrets.OVSX_PAT }}
  deploy-intellij:
    runs-on: ubuntu-latest
    needs: [ release ]
    environment: deploy
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/setup
    - uses: ./.github/setup-gradle
    - uses: actions/download-artifact@v4
      with:
        name: extension-intellij
        path: extension-intellij/build/distributions/
    - run: ls extension-intellij/build/distributions/
    - run: bb -m tasks.deploy/deploy-intellij
      env:
        JETBRAINS_TOKEN: ${{ secrets.JETBRAINS_TOKEN }}